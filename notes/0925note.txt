홍: 홍성현, 송: 송정헌

예제 3-2 (실습)
홍: :: 이 부분은 public이 아니라 함수의 리턴 타입을 적어줘야돼
홍: rectangle함수는 초기값 지정 안해줘야 할 것같은데

송: 오케이 main에서 width,height가 왜 오류일까

홍: rectangle함수에서 선언한 변수들을  public 으로 선언해줘야 다른 함수에서 사용가능 그리고 getArea()에서 리턴을 해줘야 하니까  rec에서 double이나  int 선언해줘야돼

송: iostream 선언 해줬는데 cout이랑 endl에서 오류나는데?

홍: using namespace std 써줘야돼

송: 오 됐다

홍: 근데 :: 이거 정확히 뭘 뜻하는지 알아?

송: 범위 지정 연산자인데 여러 범위에서 사용된 식별자를 식별하고 구분하는데 사용한다네
그냥 간단하게 이름 앞에 붙이면 전역으로 사용한다는 의미인거지

정리: 
1. 객체 이름 및 객체 생성 : 객체의 타입과 클래스 이름, 객체이름을 작성한다
2. 객체의 멤버 변수 접근 : 객체이름 멤버 변수 사이에 . 연산자 사용 
ex)donut.radius=1 // donut 객체의 radius 멤버 값을 1로 설정
3. 객체의 멤버 함수 접근 : 객체 이름과 멤버 사이에 . 연산자 사용 
ex) double area = donut.getArea();  // donut 객체의 면적 알아내기
4. using namespace std 꼭 써주기

----위임 생성자----

송: 위임생성자가 뭐야?

홍: 나도 몰라 위임 생성자는 타겟 생성자를 호출하는거고 여기서
타겟 생성자는 객체 초기화를 전담하니까 객체 초기화에 포커싱을 둬봐야 하지 않을까 싶은데

송: 나 모르겠어 감이 안오네.. 타겟 생성자가 뭐야 이게 타겟 생성자야?

음..  (고민을 한다) 이게 타겟 생성자야? 내 생각에는 그냥 활용성의 편의, 그니까 편의성을 위해 쓰는게 아닐까..

홍: 나도 그렇게 생각해

정리: 위임생성자는 여러 생성자에 중복 작성된 코드의 간소화를 위함.
타겟 생성자와 이를 호출하는 위임 생성자로 나누어 작성
타겟 생성자 : 객체 초기화를 전담하는 생성자
위임 생성자 : 타겟 생성자를 호출하는 생성자, 객체 초기화를 타겟 생성자에 위임

---3-6 (rectangle 클래스 만들기)
홍: 생성자 실습을 해보려고 하니까 막상 잘 안되네

송: if문을 써서 return 두개 해서 쓰면 되지 않을까?  rect 생성함수에서 왜 빨간줄이 뜰까

홍: rectangle 함수에서 선언을 안해줘서 빨간줄 나타나는거 같은데 일단 작성해봐

송: 오 됐다 issquare은 왜 빨간줄 뜰까

홍: rectangle 함수에서 bool 형식으로 선언을 해줘야 할거같은데 한번 실행해봐

송: 잘 나오네

정리 : 생성자
기본 생성자 : 
1. 클래스에 생성자가 하나도 선언되어 있지 않은 경우, 컴파일러가 대신 삽임해주는 생성자
2. 매개 변수 없는 생성자
ex) Circle(); // 기본 생성자
생성자가 하나도 작성되어 있지 않은 클래스의 경우 >> 컴파일러가 기본 생성자 자동 생성
생성자가 하나라도 선언된 클래스의 경우>> 컴파일러는 기본 생성자를 자동 생성하지 않는다
