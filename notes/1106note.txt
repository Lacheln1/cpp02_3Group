상속 관계로 클래스의 간결화 사례

성현 : 기능이 중복되어 코드가 난잡했었는데 상속을 사용하면 간단하게 설계할 수 있겠어
정헌 : 그러게 하지만 형식을 맞춰서 작성해야해서 오히려 복잡할 수있겠는데?
성현 : 그렇지만 좀더 복잡한 프로젝트를 할때를 대비해서 미리 공부를 해두면 좋을거같아.

에제 8-1

정헌: 상속을 통해서 기본 클래스를 자유롭게 호율 가능하네
성현: 그럼 상속에 상속도 가능한가?
정헌 : 같은 형식으로 쓰면 가능할꺼 같은데
성현 : 찾아보니 형식 그대로 사용하면 가능하고 여러 클래스도 상속 가능하데

업 캐스팅
다운 캐스팅

성현 : 업캐스팅 할때에는 변환 타입이 필요가 없지만 다운캐스팅 할때에는 기준이 꼭필요하네

정헌 : 듣고 보니 당연한 말 같아서 이해가 확 되는데 뭔가 업캐스팅이랑 다운캐스팅 예제를 보니까
이해가 잘 되지않아 Point* pBase = pDer;  하면 pBase가 다운 캐스팅 되는거 아닌가?
다른예제를 좀 찾아봐야 할거같아 pDer는 파생클래스 이니까 pBase가 파생클래스 주소를 가르키니까
되는거아닌가?
밑에 예제인 다운 캐스팅은 pDer = (ColorPoint *)pBase; 이건 이해가되는데 업캐스팅이 이해가안되네

성현: 그러게 인터넷에서 찾아보고 다른예제를 보며 이해하는게 좋을거같아

정헌: 일단 이정도만 알아두고 나중에 한번 직접 여러 경우를 입력하면서 코드에서 이해야해할거같아

접근지정

성현 : p.x = 5 p.y = 5는 자기 클래스가 자기가 접근하는거 아니야? 이게 왜오류가 뜨는거야?
정헌: 자기 클래스는 맞는데 불러오는위치가 main함수에서 불러와서 그런거같아
밑에 파생클래스에서 portected로 선언되었기때문에 p.x로도 사용이 가능하네
성현: 맞네 main 말고 클래스 내에서 사용이 가능하기 때문에 변경할려면 set을 이용해야하는구나
 
정헌 : C를 생성했는데 c부터 생성되지않고 위로 타고몰라가서 기본 클래스부터 시작되는거네
잘 알아둬야겠는데?
성현 : 그러게 헷갈리기 좋은 형식인거같아 잘알아두고 소멸순서도 외워두자

8-5

정헌 :상속에 사례가 뭔가 알고 있는데 헷갈려서 틀리는거같아 1234만 안되는줄 알았는데
protected도 안되는걸 알고있었는데 자꾸 된다고 착각하기 쉬운거같아서
많이 익숙해 지는것이 중요한거같아 컴퓨터가 컴파일하면 알아서 해주니까 넘어간 부분이 많아

성현: 그러게 컴퓨터로 코딩할때에는 그냥 단순하게 public을 써서 잘 몰랐던 부분들도 생기는거같아
앞으로는 구분해서 쓰는 연습을 해야할거같아

8-6

성현 : 상속받을때 객체인지 클래스인지 확인하는게 중요한거같아 main 함수인지 클래스인지
확인 안하니까 생각하니까 자꾸 틀리는거같아.

정헌: 클래스에서의 상속이랑 객체에서의 차이점을 알고있어도 자꾸 차각하는거같아 익숙해지는게
중요할거같아 

다중상속 가상상속
정헌 : 다중상속을 통해 얼마든지 여러 클래스들을 상속받고 활용할 수있네
성현 : 하지만 멤버가 이중으로 객체에 삽입되는 모호성을 가지고있어서
가상상속을 통해 활용하면 이를 해결 할 수있데
정헌: 무작정 상속해서 사용하면 안되고 여러 경우를 따지면서 사용해야겠네 